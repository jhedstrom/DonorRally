<?php

// $Id$

/**
 * @file
 * Supports the Salsa API as a Donor Rally payment gateway.
 */

/**
 * Implementation of hook_donor_rally_payment_gateway().
 */
function donor_rally_salsa_donor_rally_payment_gateway() {
  return array('donor_rally_salsa' => t('Salsa Labs/Democracy in Action'));
}

/**
 * Implementation of hook_menu().
 */
function donor_rally_salsa_menu() {
  $items['admin/settings/donor-rally/salsa'] = array(
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('donor_rally_salsa_configuration'),
    'access arguments' => array('administer donor rally'),
    'title' => 'Salsa Payment Gateway',
  );

  return $items;
}

/**
 * Implementation of hook_donor_rally_donate_button().
 */
function donor_rally_salsa_donor_rally_donate_button(&$vars) {
  $url = variable_get('donor_rally_salsa_donation_url', FALSE);

  if (!$url) {
    drupal_set_message(t('You need to first create a Donation Page at <a href="!url">SalsaLabs</a> and then set that url <a href="!set">here</a>.', array('!url' => url('http://salsalabs.com/democracyinaction'), '!set' => url('admin/settings/donorrally/salsa'))), 'error');
  }

  return donor_rally_theme_button(
    'donor-rally-donate-button',
    t('Donate Now'),
    $url . '&track=' . _donor_rally_salsa_team_tracking_code($vars['node']),
    array('target' => '_blank')
  );
}

/**
 * Implementation of hook_donor_rally_online_cash().
 */
function donor_rally_salsa_donor_rally_online_cash($nid) {
  static $report;

  if (!isset($report)) {
    $report = _donor_rally_salsa_query_cash_aggregate();
  }

  if (!$report) {
    return;
  }

  static $salsa_cash = array();

  if (empty($salsa_cash)) {
    if (variable_get('donor_rally_debug', FALSE)) {
      // We're debugging; use the aliases to map the cash values.
      $aliases = variable_get('donor_rally_debug_aliases', array());
      foreach ($report as $tracking_code => $cash) {
        if (isset($aliases['by-name'][$tracking_code])) {
          $salsa_cash[$aliases['by-name'][$tracking_code]] = $cash;
        }
      }
    }
    else {
      // Production: Use the Tracking_Code field from the report.
      $prefix = variable_get('donor_rally_salsa_tracking_code_prefix', '');
      $regex = "/^{$prefix}(\d+)$/";
      foreach ($report as $tracking_code => $cash) {
        if (preg_match($regex, $tracking_code, $matches) === 1) {
          $team_nid = $matches[1];
          $salsa_cash[$team_nid] = $cash;
        }
        else {
          // @todo: record the error?
        }
      }
    }
  }

  return $salsa_cash[$nid];
}

/**
 * Queries DIA aggregate report of donation totals for each team and returns
 * results in a nicer format.
 */
function _donor_rally_salsa_query_cash_aggregate() {
  $cash_aggregate_query = array(
    '#script' => 'getReport.sjs',
    '#fields' => DONOR_RALLY_DIA_REPORT_CASH_AGGREGATE,
  );
  // @TODO abstract this, or simply replace with PayPal/Simple Payments.
  $result = salsa_api_query($cash_aggregate_query);
  if (!$result) {
    watchdog('donor_rally', 'Failed to query Salsa API.', array(), WATCHDOG_ERROR);
    return FALSE;
  }

  $team_stats = array();

  // The report comes in a different format when there's only one. (Sigh.)
  if (isset($result['report']['row']['tracking_code'])) {
    $result['report']['row'] = array(
      array(
        'tracking_code' => $result['report']['row']['tracking_code'],
        'amount' => $result['report']['row']['amount'],
      )
    );
  }

  foreach ($result['report']['row'] as $item) {
    if (!empty($item['tracking_code'])) {
      $team_stats[$item['tracking_code']] = $item['amount'];
    }
  }
  return $team_stats;
}

/**
 * Generate Salsa Tracking_Code field for a team, given its node.
 */
function _donor_rally_salsa_team_tracking_code($node) {
  return variable_get('donor_rally_salsa_tracking_code_prefix', '') . $node->nid;
}

/**
 * Settings form.
 */
function donor_rally_salsa_configuration($form_state) {
  if (user_access('administer salsa api')) {
    $form['salsa'] = array(
      '#type'  => 'fieldset',
      '#title' => 'Salsa API settings',
    );
    $form['salsa']['link'] = array(
      '#value' => l(t('Salsa API configuration'), 'admin/settings/salsa/api'),
    );
  }

  $form['donor_rally_salsa_donation_url'] = array(
    '#type' => 'textfield',
    '#title' => t('Salsa Labs/Democracy in Action donation form url'),
    '#description' => t('You need to first create a Donation Page at <a href="!url">SalsaLabs</a> and then set that here. The url typically looks like this: %url', array('!url' => url('http://salsalabs.com/democracyinaction'), '%url' => 'https://org2.democracyinaction.org/o/0000/shop/custom.jsp?donate_page_KEY=000')),
    '#default_value' => variable_get('donor_rally_salsa_donation_url', ''),
    '#required' => TRUE,
  );

  $form['donor_rally_salsa_report_cash_aggregate'] = array(
    '#type' => 'textfield',
    '#title' => t('Cash aggregate report ID.'),
    '#description' => t('In order for Donor Rally to poll salsa for current team totals, an aggregate report needs to be created. Detailed instructions on this can be found <a href="!url">here</a>.', array('!url' => url('http://www.donorrally.com/help'))),
    '#required' => TRUE,
    '#default_value' => variable_get('donor_rally_salsa_report_cash_aggregate', ''),
  );

  $form['donor_rally_salsa_tracking_code_prefix'] = array(
    '#type' => 'textfield',
    '#title' => t('Tracking code prefix'),
    '#description' => t('Optionally set a tracking code prefix. This will allow you to easily determine, from within Salsa Labs, which payments came from Donor Rally. If left blank, the tracking codes passed to Salsa will simply be the team ID.'),
    '#default_value' => variable_get('donor_rally_salsa_tracking_code_prefix', ''),
  );

  return system_settings_form($form);
}
